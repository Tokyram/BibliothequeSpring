CREATE DATABASE bibliotheque;

\c bibliotheque;

CREATE TABLE TYPE_MEMBRE(
    ID_TYPE VARCHAR(5) PRIMARY KEY,
    TYPE_MEMBRE VARCHAR(30),
    DUREE_EMPRUNT INTEGER,
    COEFFICIENT_RETARD FLOAT
);
CREATE SEQUENCE seq_membre ;


CREATE TABLE UTILISATEUR(
    ID_UTILISATEUR VARCHAR(10) PRIMARY KEY,
    NOM VARCHAR(20),
    PRENOM VARCHAR(40),
    DATE_NAISSANCE DATE,
    ADRESSE VARCHAR(30),
    TYPE_MEMBRE VARCHAR(5),
    DATE_INSCRIPTION DATE,
    PHOTO VARCHAR(40),
    IS_ADMIN INT
);
CREATE SEQUENCE seq_utilisateur;


CREATE TABLE CATEGORIE(
    ID_CATEGORIE VARCHAR(10) PRIMARY KEY,
    NOM VARCHAR(20)
);
CREATE SEQUENCE seq_categorie ;


CREATE TABLE MODELE(
    ID_MODELE VARCHAR(10) PRIMARY KEY,
    NOM_MODELE VARCHAR(50),
    AUTEUR VARCHAR(60),
    RESUME_MODELE TEXT
);
CREATE SEQUENCE seq_modele;

CREATE TABLE MODELE_LIVRE(
    ID_MODELE VARCHAR(10),
    ID_LIVRE VARCHAR(10),
    FOREIGN KEY(ID_MODELE)REFERENCES MODELE(ID_MODELE),
    FOREIGN KEY(ID_LIVRE)REFERENCES LIVRE(ID_LIVRE)
);

-- LIVRE => EXEMPLAIRE
CREATE TABLE LIVRE(
    ID_LIVRE VARCHAR(10) PRIMARY KEY,
    LIVRE_EDITION VARCHAR(40),
    DATE_EDITION DATE,
    ISBN VARCHAR(25),
    NUMERO_COTE VARCHAR(10),
    TITRE VARCHAR(60),
    AUTEUR VARCHAR(40),
    LIVRE_COLLECTION VARCHAR(30), 
    LIVRE_RESUME TEXT,
    LANGUE VARCHAR(40),
    NOMBRE_PAGES INTEGER,
    THEME VARCHAR(40),
    COUVERTURE VARCHAR(30),
    AGE_LIMITE INTEGER,
    DISPONIBILITE INTEGER
);
CREATE SEQUENCE seq_livre;
CREATE SEQUENCE seq_livre_numero;


CREATE TABLE CATEGORIE_LIVRE(
    ID_LIVRE VARCHAR(10),
    ID_CATEGORIE VARCHAR(10),0
    FOREIGN KEY(ID_CATEGORIE) REFERENCES CATEGORIE(ID_CATEGORIE),
    FOREIGN KEY(ID_LIVRE) REFERENCES LIVRE(ID_LIVRE)
);


CREATE TABLE LECTURE_LIVRE_AUTORISE(
    ID_LIVRE VARCHAR(10),
    TYPE_MEMBRE VARCHAR(10),
    FOREIGN KEY(TYPE_MEMBRE) REFERENCES TYPE_MEMBRE(ID_TYPE),
    FOREIGN KEY(ID_LIVRE) REFERENCES LIVRE(ID_LIVRE)    
);

CREATE TABLE EMPRUNT_LIVRE_AUTORISE(
    ID_LIVRE VARCHAR(10),
    TYPE_MEMBRE VARCHAR(10),
    FOREIGN KEY(TYPE_MEMBRE) REFERENCES TYPE_MEMBRE(ID_TYPE),
    FOREIGN KEY(ID_LIVRE) REFERENCES LIVRE(ID_LIVRE)
);


CREATE TABLE EMPRUNT(
    ID_EMPRUNT VARCHAR(10) PRIMARY KEY,
    ID_UTILISATEUR VARCHAR(10),
    DATE_EMPRUNT DATE,
    DATE_RETOUR DATE
);
CREATE SEQUENCE seq_emprunt;


CREATE TABLE EMPRUNT_LIVRE(
    ID_EMPRUNT VARCHAR(10),
    ID_LIVRE VARCHAR(10),
    FOREIGN KEY(ID_EMPRUNT) REFERENCES EMPRUNT(ID_EMPRUNT),
    FOREIGN KEY(ID_LIVRE) REFERENCES LIVRE(ID_LIVRE)
);


CREATE TABLE RENDU(
    ID_RENDU VARCHAR(10) PRIMARY KEY,
    ID_EMPRUNT VARCHAR(10),
    DATE_RENDU DATE,
    FOREIGN KEY(ID_RENDU) REFERENCES RENDU (ID_RENDU)
);
CREATE SEQUENCE seq_rendu;


CREATE TABLE RENDU_LIVRE(
    ID_RENDU VARCHAR(10),
    ID_LIVRE VARCHAR(10),
    FOREIGN KEY(ID_RENDU) REFERENCES RENDU(ID_RENDU),
    FOREIGN KEY(ID_LIVRE) REFERENCES LIVRE(ID_LIVRE)
);


CREATE TABLE SANCTION(
    ID_SANCTION VARCHAR(10),
    ID_UTILISATEUR VARCHAR(10),
    ID_EMPRUNT VARCHAR(10),
    DEBUT_SANCTION DATE,
    FIN_SANCTION DATE,
    FOREIGN KEY(ID_UTILISATEUR) REFERENCES UTILISATEUR(ID_UTILISATEUR),
    FOREIGN KEY(ID_EMPRUNT) REFERENCES EMPRUNT(ID_EMPRUNT)
);
CREATE SEQUENCE seq_sanction;


INSERT INTO TYPE_MEMBRE(ID_TYPE,TYPE_MEMBRE,DUREE_EMPRUNT,COEFFICIENT_RETARD) VALUES ('TYP'||nextval('seq_membre'),'Etudiant',14,2.0);
INSERT INTO TYPE_MEMBRE(ID_TYPE,TYPE_MEMBRE,DUREE_EMPRUNT,COEFFICIENT_RETARD) VALUES ('TYP'||nextval('seq_membre'),'Professionnel',30,3.0);
INSERT INTO TYPE_MEMBRE(ID_TYPE,TYPE_MEMBRE,DUREE_EMPRUNT,COEFFICIENT_RETARD) VALUES ('TYP'||nextval('seq_membre'),'Professeur',21,2.5);
INSERT INTO TYPE_MEMBRE(ID_TYPE,TYPE_MEMBRE,DUREE_EMPRUNT,COEFFICIENT_RETARD) VALUES ('TYP'||nextval('seq_membre'),'Simple',7,1.0);


INSERT INTO UTILISATEUR(ID_UTILISATEUR,NOM,PRENOM,DATE_NAISSANCE,PHOTO,IS_ADMIN) VALUES ('ADMIN'||nextval('seq_utilisateur'),'John','Doe','1998-10-05','member/5.jpg',1);
INSERT INTO UTILISATEUR(ID_UTILISATEUR,NOM,PRENOM,DATE_NAISSANCE,PHOTO,IS_ADMIN) VALUES ('ADMIN'||nextval('seq_utilisateur'),'Faly','Doe','1998-10-05','member/5.jpg',1);

INSERT INTO UTILISATEUR(ID_UTILISATEUR,NOM,PRENOM,DATE_NAISSANCE,PHOTO,IS_ADMIN) VALUES ('ET'||nextval('seq_utilisateur'),'Harry','Doe','1998-10-05','member/5.jpg',0);


INSERT INTO CATEGORIE(ID_CATEGORIE,NOM) VALUES ('CAT'||nextval('seq_categorie'),'Roman');
INSERT INTO CATEGORIE(ID_CATEGORIE,NOM) VALUES ('CAT'||nextval('seq_categorie'),'Poesie');
INSERT INTO CATEGORIE(ID_CATEGORIE,NOM) VALUES ('CAT'||nextval('seq_categorie'),'Conte');
INSERT INTO CATEGORIE(ID_CATEGORIE,NOM) VALUES ('CAT'||nextval('seq_categorie'),'Biographie');
INSERT INTO CATEGORIE(ID_CATEGORIE,NOM) VALUES ('CAT'||nextval('seq_categorie'),'Autobiographie');
INSERT INTO CATEGORIE(ID_CATEGORIE,NOM) VALUES ('CAT'||nextval('seq_categorie'),'Memoires');
INSERT INTO CATEGORIE(ID_CATEGORIE,NOM) VALUES ('CAT'||nextval('seq_categorie'),'Roman Policier');
INSERT INTO CATEGORIE(ID_CATEGORIE,NOM) VALUES ('CAT'||nextval('seq_categorie'),'Documentaire');
INSERT INTO CATEGORIE(ID_CATEGORIE,NOM) VALUES ('CAT'||nextval('seq_categorie'),'Magazine');


INSERT INTO LIVRE (ID_LIVRE,LIVRE_EDITION,DATE_EDITION,ISBN,NUMERO_COTE,TITRE,AUTEUR,LIVRE_COLLECTION,LIVRE_RESUME,LANGUE,NOMBRE_PAGES,THEME,COUVERTURE,AGE_LIMITE,DISPONIBILITE) VALUES ('LIV'||nextval('seq_livre'),('Bantam Books'),('2024-05-24 +03'),('93ec3fae8f'),('ROM'||nextval('seq_livre_numero')),('Le loup de Wall Street'),('Jordan Belfort'),('Hors Collection'),('Resume kely ftsn test'),(NULL),('225'::int4),('Finance '),('1.jpg'),('15'::int4),0) RETURNING ID_LIVRE


-- test



INSERT INTO RENDU (ID_RENDU,ID_EMPRUNT,DATE_RENDU) VALUES ('RENDU' || nextval('seq_rendu'),'EMP4','2024-06-20');
INSERT INTO RENDU_LIVRE (ID_RENDU,ID_LIVRE) VALUES ('RENDU1','LIV15');

INSERT INTO EMPRUNT_LIVRE (ID_EMPRUNT,ID_LIVRE) VALUES ('EMP5','LIV14');
INSERT INTO RENDU (ID_RENDU,ID_EMPRUNT,DATE_RENDU) VALUES ('RENDU' || nextval('seq_rendu'),'EMP5','2024-06-15');
INSERT INTO RENDU_LIVRE (ID_RENDU,ID_LIVRE) VALUES ('RENDU1','LIV14');

-- 

SELECT *
FROM EMPRUNT WHERE 




    -- SELECT el.ID_LIVRE,l.TITRE,l.DISPONIBILITE FROM EMPRUNT e 
    -- JOIN EMPRUNT_LIVRE el ON e.ID_EMPRUNT = el.ID_EMPRUNT
    -- JOIN LIVRE l ON el.ID_LIVRE = l.ID_LIVRE 
    -- WHERE e.ID_UTILISATEUR = 'ET2' AND l.DISPONIBILITE = 1
    -- ORDER BY DATE_EMPRUNT DESC 




-- EMPRUNT EN COURS
CREATE OR REPLACE VIEW V_EMPRUNT_EN_COURS AS(
    SELECT *
    FROM EMPRUNT WHERE ID_EMPRUNT 
    NOT IN (SELECT ID_EMPRUNT FROM RENDU)
);


-- EMPRUNT NON RENDU

CREATE OR REPLACE VIEW V_EMPRUNT_NON_RENDU AS(
    SELECT t1.ID_EMPRUNT,t1.ID_LIVRE,t1.ID_UTILISATEUR,t1.DATE_EMPRUNT
    FROM (
        SELECT e.ID_EMPRUNT,e.ID_UTILISATEUR,e.DATE_EMPRUNT,el.ID_LIVRE FROM EMPRUNT e 
        JOIN EMPRUNT_LIVRE el ON el.ID_EMPRUNT = e.ID_EMPRUNT
    ) AS t1
    LEFT JOIN (
        SELECT r.ID_RENDU,r.ID_EMPRUNT,r.DATE_RENDU,rl.ID_LIVRE FROM RENDU r 
        JOIN RENDU_LIVRE rl ON rl.ID_RENDU = r.ID_RENDU
    )AS t2 
    ON t1.ID_EMPRUNT = t2.ID_EMPRUNT AND t1.ID_LIVRE = t2.ID_LIVRE
    WHERE t1.ID_EMPRUNT NOT IN (SELECT ID_EMPRUNT FROM V_EMPRUNT_EN_COURS) AND t2.DATE_RENDU IS NULL
);



-- EMPRUNT

CREATE OR REPLACE VIEW V_EMPRUNT AS(
    SELECT t1.ID_EMPRUNT,t1.ID_LIVRE,t1.ID_UTILISATEUR,t1.DATE_EMPRUNT
    FROM (
        SELECT e.ID_EMPRUNT,e.ID_UTILISATEUR,e.DATE_EMPRUNT,el.ID_LIVRE FROM EMPRUNT e 
        JOIN EMPRUNT_LIVRE el ON el.ID_EMPRUNT = e.ID_EMPRUNT
    ) AS t1
    LEFT JOIN (
        SELECT r.ID_RENDU,r.ID_EMPRUNT,r.DATE_RENDU,rl.ID_LIVRE FROM RENDU r 
        JOIN RENDU_LIVRE rl ON rl.ID_RENDU = r.ID_RENDU
    )AS t2 
    ON t1.ID_EMPRUNT = t2.ID_EMPRUNT AND t1.ID_LIVRE = t2.ID_LIVRE
);


-- NOMBRE D'EMPRUNT LIVRE

CREATE OR REPLACE VIEW V_STAT_EMPRUNT AS (    
    SELECT m.ID_MODELE,m.NOM_MODELE AS TITRE,COUNT(ve.ID_LIVRE) AS NOMBRE
    FROM V_EMPRUNT ve 
    JOIN livre l ON l.ID_LIVRE = ve.ID_LIVRE 
    JOIN MODELE_LIVRE ml ON ml.ID_LIVRE = l.ID_LIVRE
    JOIN MODELE m ON m.ID_MODELE = ml.ID_MODELE
    GROUP BY m.ID_MODELE,m.NOM_MODELE
);

-- --------------------------------------------------------------------------------------------------
SELECT *
FROM SANCTION WHERE ID_UTILISATEUR = 'ET3' 
ORDER BY FIN_SANCTION DESC LIMIT 1;

SELECT DISTINCT el.ID_LIVRE,l.TITRE,l.DISPONIBILITE
FROM EMPRUNT e JOIN EMPRUNT_LIVRE el ON e.ID_EMPRUNT = el.ID_EMPRUNT 
JOIN LIVRE l ON el.ID_LIVRE = l.ID_LIVRE WHERE e.ID_UTILISATEUR = 'ET3' 
AND l.DISPONIBILITE = 1 ORDER BY DATE_EMPRUNT DESC


SELECT el.ID_LIVRE,l.TITRE,l.DISPONIBILITE 
FROM EMPRUNT e JOIN EMPRUNT_LIVRE el ON e.ID_EMPRUNT = el.ID_EMPRUNT 
JOIN LIVRE l ON el.ID_LIVRE = l.ID_LIVRE WHERE e.ID_UTILISATEUR = 'ET3' 
AND l.DISPONIBILITE = 1 
AND e.ID_EMPRUNT = '' 
ORDER BY DATE_EMPRUNT DESC













SELECT *
FROM EMPRUNT e 
JOIN RENDU r ON e.ID_EMPRUNT = r.ID_EMPRUNT
LEFT JOIN EMPRUNT_LIVRE el ON e.ID_EMPRUNT = el.ID_EMPRUNT
LEFT JOIN RENDU_LIVRE rl ON r.ID_RENDU = rl.ID_RENDU 
WHERE e.ID_EMPRUNT IN (SELECT ID_EMPRUNT FROM RENDU);






SELECT t1.ID_EMPRUNT,t1.ID_LIVRE,t1.ID_UTILISATEUR,t1.DATE_EMPRUNT
FROM (
    SELECT e.ID_EMPRUNT,e.ID_UTILISATEUR,e.DATE_EMPRUNT,el.ID_LIVRE FROM EMPRUNT e 
    JOIN EMPRUNT_LIVRE el ON el.ID_EMPRUNT = e.ID_EMPRUNT
) AS t1
LEFT JOIN (
    SELECT r.ID_RENDU,r.ID_EMPRUNT,r.DATE_RENDU,rl.ID_LIVRE FROM RENDU r 
    JOIN RENDU_LIVRE rl ON rl.ID_RENDU = r.ID_RENDU
)AS t2 
ON t1.ID_EMPRUNT = t2.ID_EMPRUNT AND t1.ID_LIVRE = t2.ID_LIVRE








SELECT ve.ID_LIVRE,l.TITRE,COUNT(ve.ID_LIVRE) AS NOMBRE
FROM V_EMPRUNT ve 
JOIN livre l ON l.ID_LIVRE = ve.ID_LIVRE 
GROUP BY ve.ID_LIVRE,l.TITRE


-- 


WITH mois_annee AS (
  SELECT to_char(DATE_TRUNC('month', current_date), 'Month') AS mois_fr
  UNION
  SELECT to_char(DATE_TRUNC('month', (current_date - INTERVAL '1 month' * (n-1))), 'Month') AS mois_fr
  FROM generate_series(1, 12) AS s(n)
)
SELECT
  mois_annee.mois_fr,
  COALESCE(COUNT(ID_EMPRUNT), 0) AS somme_mois
FROM mois_annee
LEFT JOIN EMPRUNT ON to_char(DATE_TRUNC('month', EMPRUNT.DATE_EMPRUNT), 'Month') = mois_annee.mois_fr
AND EXTRACT(year FROM EMPRUNT.DATE_EMPRUNT) = '2024'
GROUP BY mois_annee.mois_fr,EXTRACT(year FROM EMPRUNT.DATE_EMPRUNT)
ORDER BY EXTRACT(MONTH FROM to_date(mois_annee.mois_fr, 'Month'));



SELECT DISTINCT EXTRACT(year FROM EMPRUNT.DATE_EMPRUNT) AS annee FROM EMPRUNT


-- WITH mois_annee AS (SELECT to_char(DATE_TRUNC('month', current_date), 'Month') AS mois_fr 
-- UNION SELECT to_char(DATE_TRUNC('month', (current_date - INTERVAL '1 month' * (n-1))), 'Month') AS mois_fr FROM generate_series(1, 12) AS s(n)) 
-- SELECT mois_annee.mois_fr, COALESCE(SUM(PAIEMENT.montant), 0) AS somme_mois FROM mois_annee LEFT JOIN PAIEMENT ON to_char(DATE_TRUNC('month', PAIEMENT.DATE_PAIEMENT), 'Month') = mois_annee.mois_fr AND EXTRACT(year FROM PAIEMENT.DATE_PAIEMENT) = 2023 
-- GROUP BY mois_annee.mois_fr ORDER BY EXTRACT(MONTH FROM to_date(mois_annee.mois_fr, 'Month'))




INSERT INTO MODELE_LIVRE(ID_MODELE,ID_LIVRE)VALUES('MODL1','LIV16');

INSERT INTO MODELE_LIVRE(ID_MODELE,ID_LIVRE)VALUES('MODL2','LIV18');
INSERT INTO MODELE_LIVRE(ID_MODELE,ID_LIVRE)VALUES('MODL3','LIV14');
INSERT INTO MODELE_LIVRE(ID_MODELE,ID_LIVRE)VALUES('MODL4','LIV15');
INSERT INTO MODELE_LIVRE(ID_MODELE,ID_LIVRE)VALUES('MODL5','LIV17');
INSERT INTO MODELE_LIVRE(ID_MODELE,ID_LIVRE)VALUES('MODL6','LIV13');


ALTER TABLE UTILISATEUR
ADD CONSTRAINT FK_UTIL_TYPE FOREIGN KEY (TYPE_MEMBRE)
REFERENCES TYPE_MEMBRE (TYPE_MEMBRE)
[ON DELETE action]
[ON UPDATE action]
